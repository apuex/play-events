# https://www.playframework.com/documentation/latest/Configuration
# https://www.playframework.com/documentation/latest/Configuration
play {
  modules.enabled += com.example.leveldb.Module
  http {
    secret {
      key="cfd16c3a-f0f2-4fa9-8e58-ff9a2ad2a422"
      key=${?APPLICATION_SECRET}
    }
  }
  filters {
    hosts {
      allowed=["localhost", "192.168.0.78"]
    }
    headers {
      frameOptions=null
      xssProtection=null
      contentTypeOptions=null
      permittedCrossDomainPolicies=null
      contentSecurityPolicy=null
    }
  }
  server {
    http {
      port = 9000
    }
  }
  akka {
    actor-system = "system"
  }
}

akka {
  log-dead-letters = off
  log-dead-letters-during-shutdown = off

  actor {
    provider = "akka.cluster.ClusterActorRefProvider"
    serializers {
      protobuf = "akka.remote.serialization.ProtobufSerializer"
    }
    serialization-bindings {
      "java.io.Serializable" = none
      "com.google.protobuf.GeneratedMessageV3" = protobuf
    }
  }

  remote {
    netty.tcp {
      hostname = "192.168.0.78" // default to the first seed node
      port = 2553               // default port
      hostname = ${?HOSTNAME}   // override with -DHOSTNAME
      port = ${?PORT}           // override with -DPORT
    }
  }

  cluster {
    seed-nodes = [
      "akka.tcp://system@192.168.0.78:2553",
    ]
  }

  persistence {
    journal {
      plugin = "akka.persistence.journal.leveldb"
      leveldb {
        dir = "target/journal"
        native = on
      }
    }
    snapshot-store {
      plugin = "akka.persistence.snapshot-store.local"
      local {
        dir = "target/snapshots"
        native = on
      }
    }
    query {
      journal {
        leveldb {
          class = "akka.persistence.query.journal.leveldb.LeveldbReadJournalProvider"
          write-plugin="akka.persistence.journal.leveldb"
          dir = "target/journal"
          native = on
          offset-mode="timed-uuid"
        }
      }
    }
  }
}
